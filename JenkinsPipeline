pipeline {

    agent any;

	parameters {
		choice(name: 'Select_test',
			choices: ['CommonCode', 'CommonComp', 'Infra', 'Komponents'],
			description: 'which test to choose?')		
	}
	
    stages {
	
	/////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
	
		stage('commonCode') {
			when {
				expression { params.Select_test == 'CommonCode' || params.Select_test == ''}
			}
			steps {
				echo "the test selected was ${params.Select_test}"
			}
		}
		
	/////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
	
		stage('commonComp') {
			when {
				expression { params.Select_test == 'CommonComp' || params.Select_test == ''}
			}
			steps {
				echo "the test selected was ${params.Select_test}"
				
			}
		}
	/////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
	
		stage('infra') {
			when {
				expression { params.Select_test == 'Infra' || params.Select_test == ''}
			}
			steps {
				echo "the test selected was ${params.Select_test}"			
			}
		}
	/////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
	
		stage('komponents') {
			when {
				expression { params.Select_test == 'Komponents' || params.Select_test == ''}
			}
			steps {
				echo "the test selected was ${params.Select_test}"			
			}
	}
		

    /////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 

        
  
 


    /////////////////////////////////////////////////////////////////////////// 
    /////////////////////////////////////////////////////////////////////////// 
    ///////////////////////////////////////////////////////////////////////////           
        
    }
    

       

